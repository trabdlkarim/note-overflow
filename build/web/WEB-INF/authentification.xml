<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:security="http://www.springframework.org/schema/security" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-4.2.xsd">
 
    <security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled" />
     
    <security:http auto-config="true" use-expressions="true">        
        <security:intercept-url pattern="/user/**" 
         access="hasAnyRole('ROLE_USER','ROLE_ADMIN','ROLE_SUPERVISOR')"/>
        <security:intercept-url pattern="/admin/**" 
         access="hasAnyRole('ROLE_ADMIN','ROLE_SUPERVISOR')"/>
        <security:intercept-url pattern="/error/**" access="permitAll"/>
        <security:intercept-url pattern="/do/**" access="permitAll"/>        
        <security:intercept-url pattern="/login*" access="permitAll"/>      
        <security:intercept-url pattern="/signup*" access="permitAll"/>      
        <security:intercept-url pattern="/home*" access="permitAll"/>      
        <security:intercept-url pattern="/index*" access="permitAll"/>      
        <security:intercept-url pattern="/welcome*" access="permitAll"/>      
        <security:intercept-url pattern="/reset_password*" access="permitAll"/>      
        
        <security:intercept-url pattern="/*" access="isAuthenticated()"/>
        
        <security:access-denied-handler error-page="/error/403.htm"/>
        
        <security:form-login 
            login-page="/login.htm" 
            default-target-url="/user/feed.htm"
            login-processing-url="/do/loginSecurityCheck.htm" 
            authentication-failure-url="/login.htm?error=true"
            username-parameter="username"
            password-parameter="password"
            always-use-default-target="true"/>
        
        <security:logout logout-success-url="/login.htm?logout=true" logout-url="/logout.htm" invalidate-session="true"/>
        
        <security:csrf disabled="true"/>
        
        <security:custom-filter before="FORM_LOGIN_FILTER" ref="authenticationFilter"/>
        
        <security:session-management invalid-session-url="/login.htm?logout=true">
            <security:concurrency-control max-sessions="2" expired-url="/login.htm?timeout=true"/>
        </security:session-management>
    
    </security:http>

    <import resource="applicationContext.xml"/> 
    
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider >
            <security:jdbc-user-service data-source-ref="dataSource"
            users-by-username-query="SELECT username, password, aktif FROM uyeler WHERE username=?"
            authorities-by-username-query="SELECT user.username, role.authority FROM uyeler as user, rollar as role WHERE user.uye_rolu = role.rol_id AND user.username=?"/>
        </security:authentication-provider>        
    </security:authentication-manager>
    
    <bean id="authenticationSuccessHandler"
     class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
     <property name="defaultTargetUrl" value="/user/feed.htm" />
    </bean>
   
    <bean id="authenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
    <property name="authenticationManager" ref="authenticationManager" />
    <property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
   </bean> 

   <bean id="authenticationEntryPoint" class= "org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
    <constructor-arg value="/do/loginSecurityCheck.htm"/>
   </bean> 
   <import resource="beans.xml"/>
</beans>